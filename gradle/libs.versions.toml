# --------------------------------
# Version Definitions
# --------------------------------
[versions]
androidDesugarJdkLibs = "2.1.4"
androidGradlePlugin = "8.8.0"
androidTools = "31.8.0"
androidxActivity = "1.10.0"
androidxComposeCompiler = "1.5.15"
androidxLifecycle = "2.8.7"
composeBom = "2025.01.00"
composeCompiler = "1.5.15"
composeConstraintLayout = "1.1.0"
composeTest = "1.7.6"
composeTestManifest = "1.7.6"
composeShimmer = "1.2.0"
gson = "2.10.1"
hilt = "2.54"
junit = "5.10.1"
ktor = "2.3.8"
kotlin = "2.1.0"
kotlinAndroid = "2.1.0"
kotlinSerialization = "2.1.0"
kotlinxCoroutines = "1.10.1"
kotlinxCoroutinesTest = "1.10.1"
kotlinxSerializationJson = "1.8.0"
kotestAssertioinsCore = "5.7.2"
ksp = "2.1.0-1.0.29"
mockk = "1.13.13"
navigationCompose = "2.8.5"
robolectric = "4.14.1"
truth = "1.4.4"
turbine = "1.2.0"

# --------------------------------
# Library Definitions
# --------------------------------
[libraries]
android-desugar-jdk-libs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "androidDesugarJdkLibs" }
android-gradle-plugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
android-tools-common = { group = "com.android.tools", name = "common", version.ref = "androidTools" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "androidxActivity" }
androidx-compose-animation = { module = "androidx.compose.animation:animation" }
androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "composeCompiler" }
androidx-compose-constraint-layout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "composeConstraintLayout" }
androidx-compose-gradle-plugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-material3-android = { module = "androidx.compose.material3:material3-android" }
androidx-compose-ui = { module = "androidx.compose.ui:ui" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "composeTest" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "composeTestManifest" }
androidx-lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
compose-shimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "composeShimmer" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit" }
kotlin-gradle-plugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotestAssertioinsCore" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ksp-gradle-plugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
material-icons-core = { module = "androidx.compose.material:material-icons-core" }
material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
truth = { group = "com.google.truth", name = "truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# --------------------------------
# Plugin Definitions
# --------------------------------
[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
android-test = { id = "com.android.test", version.ref = "androidGradlePlugin" }
compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinAndroid" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinAndroid" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinSerialization" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# Project-specific plugins
taximeter-android-application = { id = "taximeter.android.application" }
taximeter-android-application-compose = { id = "taximeter.android.application.compose" }
taximeter-android-feature = { id = "taximeter.android.feature" }
taximeter-android-library = { id = "taximeter.android.library" }
taximeter-android-library-compose = { id = "taximeter.android.library.compose" }
taximeter-android-test = { id = "taximeter.android.test" }
taximeter-hilt = { id = "taximeter.hilt" }
taximeter-jvm-library = { id = "taximeter.jvm.library" }

# --------------------------------
# Bundle Definitions
# --------------------------------
[bundles]
compose = [
    "androidx-activity-compose",
    "androidx-compose-animation",
    "androidx-compose-constraint-layout",
    "androidx-compose-material3",
    "androidx-compose-material3-android",
    "androidx-compose-ui",
    "androidx-lifecycle-runtime-compose",
    "androidx-lifecycle-viewmodel-compose",
    "navigation-compose",
    "compose-shimmer",
]

coroutines = [
    "kotlinx-coroutines-android",
    "kotlinx-coroutines-core",
]

ktor = [
    "ktor-client-content-negotiation",
    "ktor-client-core",
    "ktor-client-encoding",
    "ktor-client-logging",
    "ktor-client-okhttp",
    "ktor-serialization-kotlinx-json",
]

material = [
    "material-icons-core",
    "material-icons-extended",
]

test = [
    "junit-jupiter-api",
    "junit-jupiter-params",
    "kotest-assertions-core",
    "kotlinx-coroutines-test",
    "mockk",
    "turbine",
    "androidx-compose-ui-test",
    "robolectric",
]
